<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>New Page</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Playfair:ital,opsz,wght@0,5..1200,300..900;1,5..1200,300..900&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }
        
        /* Set up full-height layout */
        html, body {
            height: 100%;
            margin: 0;
        }
        
        body {
            background-image: url('/images/background/gray-wood-texture.jpg');
            background-size: contain;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        li {
            list-style: none;
        }

        .mainhead {
            display: flex;
            justify-content: space-between;
            margin: 10px;
            align-items: center;
        }
            
        .subhead {
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .buttons .searchBar {
            width: 15rem;
            background-color: transparent;
            border: 1px solid;
        }
        .buttons img {
            height: 25px;
            cursor: pointer;
        }
        .buttons img:hover {
            filter: contrast(0);
        }
        .buttons button:hover {
            background-color: rgb(64, 63, 63);
            color: aliceblue;
        }
        .modal {
            display: none; 
            position: absolute; 
            top: 50px; 
            right: 10px; 
            z-index: 1000; 
        }
        .modal-content {
            background-color: #ffffff;
            padding: 15px;
            border: 1px solid #888;
            border-radius: 8px;
            width: 300px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
            text-align: center;
        }
        .modal-content li {
            list-style-type: none;
            padding: 2px;
            color: black;
        }
        .modal-content a {
            text-decoration: none;
        }
        .close {
            color: black;
            float: right;
            font-size: 20px;
            font-weight: bold;
            cursor: pointer;
        }
        nav ul {
            display: flex;
            list-style: none;
        }
        .subhead a {
            text-decoration: none; 
            color: black;
        }
        .subhead li {
            margin: 20px 10px;
        }

        /* Main content container */
        main {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
            flex: 1;
        }

        /* Filter and Sort section */
        .filterSort {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    margin: 30px 0;
    flex-wrap: wrap;
    background-color: rgba(255, 255, 255, 0.7);
    padding: 15px;
    border-radius: 12px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(5px);
}

.filter, .sort, .price-filter {
    background-color: rgba(255, 255, 255, 0.8);
    padding: 12px 18px;
    border-radius: 8px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
    display: flex;
    align-items: center;
    gap: 12px;
    transition: all 0.3s ease;
    border: 1px solid rgba(0, 0, 0, 0.1);
}

.filter:hover, .sort:hover, .price-filter:hover {
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
}

.filter select, .sort select {
    padding: 8px 15px;
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 6px;
    font-size: 0.95rem;
    cursor: pointer;
    background-color: white;
    min-width: 180px;
    appearance: none;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 10px center;
    background-size: 16px;
}

.price-filter {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 8px;
}

.price-inputs {
    display: flex;
    align-items: center;
    gap: 8px;
}

.price-inputs input {
    width: 90px;
    padding: 8px 12px;
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 6px;
    font-size: 0.95rem;
    background-color: white;
}

.price-inputs span {
    color: #555;
    font-size: 0.9rem;
}

.price-inputs button {
    padding: 8px 15px;
    background: #222;
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 0.9rem;
    transition: background-color 0.3s ease;
}

.price-inputs button:hover {
    background-color: #444;
}

.filter label, .sort label, .price-filter label {
    font-weight: 500;
    color: #333;
    font-size: 0.95rem;
    white-space: nowrap;
}

        /* Product grid */
        .allProduct {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
            justify-content: center;
            margin: 30px auto;
        }

        .product {
            background-color: #ffffff4c;
            border-radius: 8px;
            box-shadow: 0 8px 9px rgba(0, 0, 0, 0.1);
            padding: 15px;
            text-align: center;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            position: relative;
        }

        .product:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

        .product img {
            width: 100%;
            height: auto;
            object-fit: cover;
            aspect-ratio: 1/1;
            border-radius: 4px;
        }

        .product p {
            font-size: 1rem;
            margin: 10px 0;
            color: #333;
            font-weight: 500;
        }

        .price {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: 10px 0;
        }

        .original-price {
            text-decoration: line-through;
            font-size: 0.9rem;
            color: #888;
        }

        .discount-price {
            color: #000;
            font-weight: bold;
            font-size: 1.1rem;
        }

        .product-link {
            text-decoration: none;
            color: inherit;
            display: block;
        }

        .add-to-cart-btn {
            background-color: #333;
            color: #fff;
            border: none;
            border-radius: 4px;
            padding: 8px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 10px auto 0;
            width: 40px;
            height: 40px;
            transition: background-color 0.3s ease;
        }

        .add-to-cart-btn i {
            font-size: 1.2rem;
        }

        .add-to-cart-btn:hover {
            background-color: #555;
        }

        .add-to-cart-btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        /* Footer */
        footer {
            background-color: black;
            color: white;
            display: flex;
            justify-content: space-around;
            padding: 40px 0;
            flex-wrap: wrap;
            width: 100%;
            margin-top: auto;
        }
        
        footer div {
            margin: 10px;
            min-width: 150px;
        }
        
        footer div p {
            font-weight: bold;
            margin-bottom: 10px;
        }
        
        footer ul {
            list-style: none;
        }
        
        footer li {
            margin: 8px 0;
        }
        
        footer input[type="text"] {
            padding: 10px;
            margin-top: 10px;
            border-radius: 4px;
            border: none;
            width: 200px;
        }
        
        .buttons {
            display: flex;
            gap: 10px;
            align-items: center;
        }
        
        .buttons input {
            padding: 8px;
            border-radius: 4px;
            border: 1px solid #ccc;
        }
        
        .buttons button {
            padding: 8px 15px;
            border-radius: 4px;
            cursor: pointer;
        }

        /* No products message */
        .no-products {
            grid-column: span 4;
            text-align: center;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        /* Responsive adjustments */
        @media (max-width: 1000px) {
            .allProduct {
                grid-template-columns: repeat(3, 1fr);
            }
            .no-products {
                grid-column: span 3;
            }
        }

        @media (max-width: 768px) {
            .allProduct {
                grid-template-columns: repeat(2, 1fr);
            }
            .no-products {
                grid-column: span 2;
            }
            .filterSort {
                flex-direction: column;
                gap: 10px;
            }
        }

        @media (max-width: 480px) {
            .allProduct {
                grid-template-columns: 1fr;
            }
            .no-products {
                grid-column: span 1;
            }
        }

        /* Pagination styles */
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 20px 0;
            gap: 10px;
        }

        .pagination a {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            text-decoration: none;
            color: black;
            background-color: white;
        }

        .pagination a.active {
            background-color: black;
            color: white;
            font-weight: bold;
        }

        .pagination a:hover {
            background-color: #f0f0f0;
        }
    </style>
</head>
<body>

    <header>
        <div class="mainhead">
            <p>U-Craft .</p>
            <div class="buttons">
                <form method="GET" action="/productListing" class="search">
                    <input type="text" class="searchBar" name="search" placeholder="Search product..." value="<%= searchQuery || '' %>" onkeyup="searchProducts()">
                </form>
                <img src="/images/project_icons/profile.png" alt="profile" onmouseover="profileViewModal()" class="profileImg">
                <a href="/logout"><button>Logout</button></a>
            </div>
            <div id="profileViewModal" class="modal">
                <div class="modal-content" onmouseleave="closeViewModal()">
                    <% if (userName) { %>
                        <p>Welcome, <strong><%= userName.toUpperCase() %></strong>!</p>
                    <% } else { %>
                        <p><a href="/login">Login</a> | <a href="/signup">Signup</a></p>
                    <% } %>
                    <ul>
                        <a href="/profile"><li>Profile</li></a>
                        <a href="/wishlist"><li>Wish List</li></a>
                        <a href="/cart"><li>Cart</li></a>
                        <a href="/wallet"><li>Wallet</li></a>
                    </ul>
                </div>
            </div>
        </div>

        <div class="subhead">
            <nav>
                <ul>
                    <li>Home</li>
                    <a href="/productListing"><li>Shop</li></a>
                    <a href="/customListing"><li>Custom</li></a>
                    <a href="/about"><li>About</li></a>
                    <a href="/contact"><li>Contact</li></a>
                </ul>
            </nav> 
        </div>
    </header>
    <!-- Breadcrumbs -->
    <nav id="breadcrumbs" style="margin: 18px 0 0 30px;"></nav>
    <main>
        <div class="filterSort">
            <div class="price-filter">
                <form method="GET" action="/productListing">
                    <input type="hidden" name="search" value="<%= searchQuery %>">
                    <input type="hidden" name="category" value="<%= selectedCategory %>">
                    <input type="hidden" name="sort" value="<%= sort %>">
                    
                    <label>Price Range:</label>
                    <div class="price-inputs">
                        <input type="number" name="minPrice" placeholder="Min" value="<%= minPrice %>">
                        <span>to</span>
                        <input type="number" name="maxPrice" placeholder="Max" value="<%= maxPrice %>">
                        <button type="submit">Apply</button>
                    </div>
                </form>
            </div>
            <form method="GET" action="/productListing" class="filter">
                <input type="hidden" name="search" value="<%= searchQuery || '' %>">
                <input type="hidden" name="sort" value="<%= sort || '' %>">
                <select name="category" onchange="this.form.submit()">
                    <option value="">All Categories</option>
                    <% categories.forEach(category => { %>
                        <% if (category && category._id && category.name) { %>
                            <option value="<%= category._id %>" <%= selectedCategory === category._id.toString() ? 'selected' : '' %>>
                                <%= category.name %>
                            </option>
                        <% } %>
                    <% }) %>
                </select>
            </form>
            <form method="GET" action="/productListing" class="sort">
                <input type="hidden" name="search" value="<%= searchQuery || '' %>">
                <input type="hidden" name="category" value="<%= selectedCategory || '' %>">
                <label for="sort">Sort by:</label>
                <select name="sort" id="sort" onchange="this.form.submit()">
                  <option value="">Default Sorting</option>
                  <option value="price_asc" <%= sort === 'price_asc' ? 'selected' : '' %>>Price: Low to High</option>
                  <option value="price_desc" <%= sort === 'price_desc' ? 'selected' : '' %>>Price: High to Low</option>
                  <option value="name_asc" <%= sort === 'name_asc' ? 'selected' : '' %>>Name: A-Z</option>
                  <option value="name_desc" <%= sort === 'name_desc' ? 'selected' : '' %>>Name: Z-A</option>
                  <option value="ratings" <%= sort ==='ratings' ? 'selected' : '' %>>Ratings</option>
                  <option value="newest" <%= sort === 'newest' ? 'selected' : '' %>>Newest First</option>
                  <option value="oldest" <%= sort === 'oldest' ? 'selected' : '' %>>Oldest First</option>
                </select>
              </form>
              
        </div>

        <div class="allProduct">
            <% if (error) { %>
                <p style="color: red; text-align: center; grid-column: 1 / -1;"><%= error %></p>
            <% } %>

            <% if (products && products.length > 0) { %>
                <% products.forEach(product => { %>
                    <div class="product" data-name="<%= product.productName.toLowerCase() %>" data-price="<%= product.salePrice %>" data-date="<%= product.createdAt %>" data-category="<%= product.category ? product.category._id : '' %>">
                        <a href="/product/<%= product._id %>" class="product-link">
                            <img src="/Uploads/product-images/<%= product.productImage[0] %>" alt="<%= product.productName %>">
                            <p><%= product.productName %></p>
                            <div class="price">
                                <span class="original-price">Rs. <%= product.regularPrice %></span>
                                <span class="discount-price">Rs. <%= product.salePrice %></span>
                            </div>
                            <% if (product.quantity < 10 && product.quantity > 0) { %>
                                <p style="color: red; font-size: 0.9rem;">Low Stock: Only <%= product.quantity %> left!</p>
                            <% } %>
                        </a>
                        <button class="add-to-cart-btn" onclick="addToCart('<%= product._id %>')" <%= product.quantity === 0 ? 'disabled' : '' %> title="Add to Cart">
                            <i class="fas fa-shopping-cart"></i>
                        </button>
                    </div>
                <% }) %>
            <% } else { %>
                <p class="no-products">No products available.</p>
            <% } %>
        </div>

        <!-- Pagination Controls -->
        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>&search=<%= searchQuery || '' %>&category=<%= selectedCategory || '' %>&sort=<%= sort || '' %>" class="prev">Previous</a>
            <% } %>
            <% for (let i = 1; i <= totalPages; i++) { %>
                <a href="?page=<%= i %>&search=<%= searchQuery || '' %>&category=<%= selectedCategory || '' %>&sort=<%= sort || '' %>" class="<%= i === currentPage ? 'active' : '' %>"><%= i %></a>
            <% } %>
            <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>&search=<%= searchQuery || '' %>&category=<%= selectedCategory || '' %>&sort=<%= sort || '' %>" class="next">Next</a>
            <% } %>
        </div>
    </main>
    
    <footer>
        <div id="exclusive">
            <p>Exclusive</p>
            <p>Subscribe</p>
            <input type="text" placeholder="Enter Your E-mail" />
        </div>
        <div id="support">
            <p>Support</p>
            <ul>
                <li>Help Center</li>
                <li>Contact Us</li>
            </ul>
        </div>
        <div id="account">
            <p>Account</p>
            <ul>
                <li>Login</li>
                <li>Register</li>
            </ul>
        </div>
        <div id="quickLinks">
            <p>Quick Links</p>
            <ul>
                <li>Shop</li>
                <li>Custom</li>
                <li>FAQ</li>
            </ul>
        </div>
    </footer>

    <script>
    function profileViewModal() {
        document.getElementById('profileViewModal').style.display = 'block';
    }

    function closeViewModal() {
        document.getElementById('profileViewModal').style.display = 'none';
    }

    // Client-side search function
    function searchProducts() {
        const input = document.querySelector('.searchBar').value.toLowerCase();
        const products = document.querySelectorAll('.product');
        let hasVisibleProducts = false;

        products.forEach(product => {
            const productName = product.getAttribute('data-name');
            if (productName.includes(input)) {
                product.style.display = '';
                hasVisibleProducts = true;
            } else {
                product.style.display = 'none';
            }
        });

        const noProductsMessage = document.querySelector('.no-products');
        if (noProductsMessage) {
            noProductsMessage.style.display = hasVisibleProducts ? 'none' : 'block';
        }
    }

    // Client-side filtering function
    function filterProducts() {
        const selectedCategory = document.querySelector('select[name="category"]').value;
        const minPriceInput = document.querySelector('input[name="minPrice"]').value;
        const maxPriceInput = document.querySelector('input[name="maxPrice"]').value;
        const minPrice = minPriceInput ? parseFloat(minPriceInput) : 0;
        const maxPrice = maxPriceInput ? parseFloat(maxPriceInput) : Infinity;
        const products = document.querySelectorAll('.product');
        let hasVisibleProducts = false;

        products.forEach(product => {
            const productCategory = product.getAttribute('data-category');
            const productPrice = parseFloat(product.getAttribute('data-price'));

            const matchesCategory = !selectedCategory || productCategory === selectedCategory;
            const matchesPrice = productPrice >= minPrice && productPrice <= maxPrice;

            if (matchesCategory && matchesPrice) {
                product.style.display = '';
                hasVisibleProducts = true;
            } else {
                product.style.display = 'none';
            }
        });

        const noProductsMessage = document.querySelector('.no-products');
        if (noProductsMessage) {
            noProductsMessage.style.display = hasVisibleProducts ? 'none' : 'block';
        }

        // Re-apply search after filtering
        searchProducts();
    }

    // Add to cart function
    function addToCart(productId) {
        fetch('/cart/add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ productId, quantity: 1 })
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(err => {
                    throw new Error(err.error || 'Failed to add to cart');
                });
            }
            return response.json();
        })
        .then(result => {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: result.message || 'Product added to cart successfully',
                showConfirmButton: false,
                timer: 1500
            });
        })
        .catch(error => {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: error.message || 'Failed to add to cart'
            });
        });
    }

    // Dynamic Breadcrumbs
        (function() {
            // Map for pretty names
            const prettyNames = {
                '': 'Home',
                'home': 'Home',
                'productlisting': 'Shop',
                'customlisting': 'Custom',
                'profile': 'Profile',
                'cart': 'Cart',
                'wishlist': 'Wishlist',
                'addresses': 'Addresses',
                'orders': 'Orders',
                'checkout': 'Checkout',
                'about': 'About',
                'contact': 'Contact'
            };
            function toTitle(str) {
                return prettyNames[str.toLowerCase()] || str.charAt(0).toUpperCase() + str.slice(1);
            }
            const path = window.location.pathname.replace(/^\/+|\/+$/g, '').split('/');
            let crumbs = [];
            let url = '';
            for (let i = 0; i < path.length; i++) {
                url += '/' + path[i];
                crumbs.push({
                    name: toTitle(path[i]),
                    url: i < path.length - 1 ? url : null
                });
            }
            // Always start with Home
            if (crumbs.length === 0 || crumbs[0].name !== 'Home') {
                crumbs.unshift({ name: 'Home', url: '/' });
            }
            // Render
            const nav = document.getElementById('breadcrumbs');
            if (nav) {
                nav.innerHTML = '<ol style="list-style:none;display:flex;gap:5px;font-size:14px;color:#888;">' +
                    crumbs.map((crumb, idx) => {
                        if (crumb.url) {
                            return `<li><a href="${crumb.url}" style="color:#888;text-decoration:none;">${crumb.name}</a></li>` +
                                (idx < crumbs.length - 1 ? '<li style="color:#888;">/</li>' : '');
                        } else {
                            return `<li style="color:#333;">${crumb.name}</li>`;
                        }
                    }).join('') +
                    '</ol>';
            }
        })();

    // Apply filters, sorting, and search on page load
    document.addEventListener('DOMContentLoaded', () => {
        filterProducts(); // Apply initial category and price filter
        searchProducts(); // Apply initial search filter

        // Re-apply filters when price filter form is submitted
        document.querySelector('.price-filter form').addEventListener('submit', () => {
            setTimeout(filterProducts, 0); // Run after form submission updates DOM
        });

        // Re-apply filters when category filter changes
        document.querySelector('select[name="category"]').addEventListener('change', filterProducts);
    });
</script>

</body>
</html>