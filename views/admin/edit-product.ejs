<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Product</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.12/sweetalert2.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        body {
            background-color: #b6ddf6;
            display: grid;
            grid-template-columns: 250px 1fr; /* Sidebar + Main Content */
            grid-template-rows: 60px 1fr; /* Topbar + Main Content */
            height: 100vh;
        }

        /* Sidebar */
        header {
            color: white;
            grid-row: 1 / 3;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            padding: 20px;
            border-right: 2px solid black;
            background-color: #343a40;
        }

        nav ul {
            list-style: none;
        }

        nav li {
            padding: 15px 0;
            cursor: pointer;
            transition: background-color 0.3s;
            color: white;
        }

        nav li:hover {
            background-color: #555;
        }

        button.logout-btn {
            background-color: #d9534f;
            color: white;
            border: none;
            padding: 12px;
            margin-top: 20px;
            cursor: pointer;
            border-radius: 5px;
            width: 100%;
        }

        button.logout-btn:hover {
            background-color: #c9302c;
        }

        /* Topbar */
        .topbar {
            display: flex;
            align-items: center;
            padding: 10px 20px;
            border-bottom: 2px solid black;
            background-color: #343a40;
            color: white;
        }

        .topbar input {
            width: 40%;
            padding: 10px;
            background-color: #495057;
            border-radius: 20px;
            font-size: 14px;
            color: white;
            border: none;
        }

        /* Main Content */
        main {
            padding: 20px;
            background-color: #f8f9fa;
            overflow-y: auto;
        }

        /* Error Message Styling */
        .error-message {
            color: #dc3545;
            font-size: 14px;
            margin-top: 5px;
        }

        /* Image Styles */
        .thumbnails-container {
            display: flex;
            overflow-x: auto;
            gap: 10px;
            padding: 10px 0;
        }

        .thumbnail {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .image-preview {
            max-width: 200px;
            max-height: 200px;
            width: auto;
            height: auto;
            margin-bottom: 10px;
            display: none;
            object-fit: contain;
            border: 1px solid #dee2e6;
            border-radius: 4px;
        }

        .image-cropper {
            max-width: 300px;
            max-height: 300px;
            margin: 10px 0;
        }

        .cropper-container {
            position: relative;
            max-width: 100%;
            height: 300px;
        }

        .existing-image {
            width: 100px;
            height: 100px;
            object-fit: cover;
            margin-right: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            body {
                grid-template-columns: 1fr;
                grid-template-rows: 60px 60px 1fr; /* Topbar + Sidebar + Content */
            }

            header {
                grid-column: 1 / 2;
                grid-row: 2 / 3;
                display: flex;
                flex-direction: row;
                overflow-x: auto;
            }

            nav ul {
                display: flex;
                gap: 20px;
            }

            button.logout-btn {
                margin-top: 0;
            }

            main {
                grid-row: 3 / 4;
            }
        }
    </style>
</head>
<body>
    <header>
        <nav>
            <ul>
                <a href="/admin/adminHome"><li>Dashboard</li></a>
                <li>Order Lists</li>
                <a href="/admin/userManagement"><li>Users</li></a>
                <li>Sales</li>
                <li>Coupons</li>
                <li>Category</li>
                <li>Banner</li>
                <li>Offer</li>
                <a href="/admin/products"><li>Products</li></a>
            </ul>
            <a href="/admin/adminLogout"><button class="logout-btn">Logout</button></a>
        </nav>
    </header>
    
    <div class="topbar">
        <input type="text" placeholder="search...">
    </div>
    
    <main>
        <section class="content-main">
            <div class="row">
                <div class="col-9">
                    <div class="content-header d-flex justify-content-between align-items-center mb-4">
                        <h2 class="content-title">Edit Product: <%= product.productName %></h2>
                        <a href="/admin/products" class="btn btn-secondary">Back to Products</a>
                    </div>
                </div>
                <div class="col-lg-8">
                    <div class="card mb-4">
                        <div class="card-body">
                            <% if (error) { %>
                                <div class="alert alert-danger"><%= error %></div>
                            <% } %>
                            <form id="editProductForm" method="POST" action="/admin/edit-product/<%= product._id %>" enctype="multipart/form-data">
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">Product Name</label>
                                    <input type="text" placeholder="Type here" name="productName" class="form-control" id="product_name" value="<%= product.productName %>">
                                    <div id="productName-error" class="error-message"></div>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Full Description</label>
                                    <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control" rows="4"><%= product.description %></textarea>
                                    <div id="description-error" class="error-message"></div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Regular Price</label>
                                            <input placeholder="₹" name="regularPrice" type="text" class="form-control" value="<%= product.regularPrice || '' %>">
                                            <div id="regularPrice-error" class="error-message"></div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Sale Price</label>
                                            <input placeholder="₹" name="salePrice" type="text" class="form-control" value="<%= product.salePrice || '' %>">
                                            <div id="salePrice-error" class="error-message"></div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Quantity</label>
                                            <input placeholder="" name="quantity" type="text" class="form-control" value="<%= product.quantity %>">
                                            <div id="quantity-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card mb-4">
                                    <div class="card-body">
                                        <div class="row gx-2">
                                            <div class="col-sm-6 mb-3">
                                                <label class="form-label">Category</label>
                                                <select class="form-select" name="category">
                                                    <% categories.forEach(cat => { %>
                                                        <option value="<%= cat.name %>" <%= product.category && cat.name === product.category.name ? 'selected' : '' %>>
                                                            <%= cat.name %>
                                                        </option>
                                                    <% }) %>
                                                </select>
                                                <div id="category-error" class="error-message"></div>
                                            </div>
                                            <div class="col-sm-6 mb-3">
                                                <label class="form-label">Status</label>
                                                <select class="form-select" name="status">
                                                    <option value="Available" <%= product.status === 'Available' ? 'selected' : '' %>>Available</option>
                                                    <option value="Out of Stock" <%= product.status === 'Out of Stock' ? 'selected' : '' %>>Out of Stock</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card mb-4">
                                    <div class="card-header bg-light">
                                        <h5 class="mb-0">Existing Images</h5>
                                    </div>
                                    <div class="card-body">
                                        <div class="thumbnails-container">
                                            <% product.productImage.forEach((img, index) => { %>
                                                <div class="position-relative">
                                                    <img src="/uploads/product-images/<%= img %>" class="existing-image" alt="Product Image <%= index + 1 %>">
                                                    <input type="checkbox" name="deleteImages[]" value="<%= img %>" id="delete-<%= index %>" class="position-absolute top-0 end-0 m-1">
                                                    <label for="delete-<%= index %>" class="small text-muted d-block text-center">Remove</label>
                                                </div>
                                            <% }) %>
                                        </div>
                                    </div>
                                </div>
                                <div class="card mb-4">
                                    <div class="card-header bg-light">
                                        <h5 class="mb-0">Update Images (Optional)</h5>
                                    </div>
                                    <div class="card-body">
                                        <div class="thumbnails-container" id="addedImagesContainer"></div>
                                        <div class="row">
                                            <div class="col-md-6 mb-3">
                                                <label class="form-label">Image 1</label>
                                                <input class="form-control" type="file" name="image1" id="input1" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 1)">
                                                <img src="" class="image-preview" id="imgView1" alt="Preview">
                                                <div class="image-cropper" id="cropperContainer1" style="display:none;">
                                                    <div class="cropper-container">
                                                        <img src="" id="croppedImg1" alt="Cropper">
                                                    </div>
                                                    <button type="button" id="saveButton1" class="btn btn-sm btn-primary mt-2">Save Crop</button>
                                                </div>
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label class="form-label">Image 2</label>
                                                <input class="form-control" type="file" name="image2" id="input2" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 2)">
                                                <img src="" class="image-preview" id="imgView2" alt="Preview">
                                                <div class="image-cropper" id="cropperContainer2" style="display:none;">
                                                    <div class="cropper-container">
                                                        <img src="" id="croppedImg2" alt="Cropper">
                                                    </div>
                                                    <button type="button" id="saveButton2" class="btn btn-sm btn-primary mt-2">Save Crop</button>
                                                </div>
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label class="form-label">Image 3</label>
                                                <input class="form-control" type="file" name="image3" id="input3" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 3)">
                                                <img src="" class="image-preview" id="imgView3" alt="Preview">
                                                <div class="image-cropper" id="cropperContainer3" style="display:none;">
                                                    <div class="cropper-container">
                                                        <img src="" id="croppedImg3" alt="Cropper">
                                                    </div>
                                                    <button type="button" id="saveButton3" class="btn btn-sm btn-primary mt-2">Save Crop</button>
                                                </div>
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label class="form-label">Image 4</label>
                                                <input class="form-control" type="file" name="image4" id="input4" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 4)">
                                                <img src="" class="image-preview" id="imgView4" alt="Preview">
                                                <div class="image-cropper" id="cropperContainer4" style="display:none;">
                                                    <div class="cropper-container">
                                                        <img src="" id="croppedImg4" alt="Cropper">
                                                    </div>
                                                    <button type="button" id="saveButton4" class="btn btn-sm btn-primary mt-2">Save Crop</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex gap-3 mb-4">
                                    <button type="submit" class="btn btn-primary">Update Product</button>
                                    <a href="/admin/products" class="btn btn-secondary">Cancel</a>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.12/sweetalert2.min.js"></script>
    
    <script>
        let currentCropper = null;

        // Function to handle image preview and cropping
        function viewImage(event, index) {
            const input = event.target;
            const previewImage = document.getElementById(`imgView${index}`);
            const cropperContainer = document.getElementById(`cropperContainer${index}`);
            const cropperImage = document.getElementById(`croppedImg${index}`);
            const saveButton = document.getElementById(`saveButton${index}`);

            if (input.files && input.files[0]) {
                const reader = new FileReader();

                reader.onload = function(e) {
                    previewImage.src = e.target.result;
                    previewImage.style.display = 'block';

                    if (currentCropper) {
                        currentCropper.destroy();
                        currentCropper = null;
                    }

                    if (typeof Cropper === 'undefined') {
                        Swal.fire({
                            icon: 'error',
                            title: 'Cropper Not Loaded',
                            text: 'CropperJS failed to load. You can still upload without cropping.'
                        });
                        cropperContainer.style.display = 'none';
                        return;
                    }

                    cropperImage.src = e.target.result;
                    cropperContainer.style.display = 'block';

                    cropperImage.onload = function() {
                        try {
                            currentCropper = new Cropper(cropperImage, {
                                aspectRatio: 1,
                                viewMode: 1,
                                guides: true,
                                background: false,
                                autoCropArea: 0.8,
                                zoomable: true,
                                scalable: true,
                                movable: true
                            });
                        } catch (error) {
                            console.error('Error initializing Cropper:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Cropper Error',
                                text: 'Failed to initialize image cropper.'
                            });
                            cropperContainer.style.display = 'none';
                            return;
                        }

                        saveButton.onclick = function() {
                            if (!currentCropper) return;

                            const croppedCanvas = currentCropper.getCroppedCanvas({
                                width: 800,
                                height: 800
                            });

                            if (!croppedCanvas) return;

                            previewImage.src = croppedCanvas.toDataURL('image/jpeg', 0.9);

                            croppedCanvas.toBlob(function(blob) {
                                const fileName = `cropped-img-${Date.now()}-${index}.jpeg`;
                                const imgFile = new File([blob], fileName, { type: 'image/jpeg' });
                                const dataTransfer = new DataTransfer();
                                dataTransfer.items.add(imgFile);
                                input.files = dataTransfer.files;

                                const thumbnail = document.createElement('img');
                                thumbnail.src = previewImage.src;
                                thumbnail.className = 'thumbnail';
                                document.getElementById('addedImagesContainer').appendChild(thumbnail);

                                cropperContainer.style.display = 'none';
                                currentCropper.destroy();
                                currentCropper = null;
                                
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Image Cropped',
                                    text: 'The image has been cropped successfully!',
                                    timer: 1500,
                                    showConfirmButton: false
                                });
                            }, 'image/jpeg', 0.9);
                        };
                    };
                };

                reader.readAsDataURL(input.files[0]);
            }
        }

        // Form validation
        document.getElementById('editProductForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Reset error messages
            document.querySelectorAll('.error-message').forEach(el => {
                el.textContent = '';
            });
            
            let isValid = true;
            const productName = document.getElementById('product_name').value;
            const description = document.getElementById('descriptionid').value;
            const regularPrice = document.querySelector('input[name="regularPrice"]').value;
            const salePrice = document.querySelector('input[name="salePrice"]').value;
            const quantity = document.querySelector('input[name="quantity"]').value;
            
            // Validation checks
            if (!productName.trim()) {
                document.getElementById('productName-error').textContent = 'Product name is required';
                isValid = false;
            }
            
            if (!description.trim()) {
                document.getElementById('description-error').textContent = 'Description is required';
                isValid = false;
            }
            
            if (!regularPrice.trim()) {
                document.getElementById('regularPrice-error').textContent = 'Regular price is required';
                isValid = false;
            } else if (isNaN(parseFloat(regularPrice)) || parseFloat(regularPrice) <= 0) {
                document.getElementById('regularPrice-error').textContent = 'Please enter a valid price';
                isValid = false;
            }
            
            if (salePrice.trim() && (isNaN(parseFloat(salePrice)) || parseFloat(salePrice) <= 0)) {
                document.getElementById('salePrice-error').textContent = 'Please enter a valid sale price';
                isValid = false;
            }
            
            if (!quantity.trim()) {
                document.getElementById('quantity-error').textContent = 'Quantity is required';
                isValid = false;
            } else if (isNaN(parseInt(quantity)) || parseInt(quantity) < 0) {
                document.getElementById('quantity-error').textContent = 'Please enter a valid quantity';
                isValid = false;
            }
            
            if (!isValid) {
                Swal.fire({
                    icon: 'error',
                    title: 'Validation Error',
                    text: 'Please correct the errors in the form'
                });
                return false;
            }
            
            // If everything is valid, show confirmation and submit
            Swal.fire({
                title: 'Update Product?',
                text: 'Are you sure you want to update this product?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, update it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Submit the form
                    this.submit();
                }
            });
        });
    </script>
</body>
</html>